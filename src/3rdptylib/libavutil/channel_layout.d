module libavutil.channel_layout;

extern(C):
nothrow:

enum AV_CH_FRONT_LEFT             = 0x00000001;
enum AV_CH_FRONT_RIGHT            = 0x00000002;
enum AV_CH_FRONT_CENTER           = 0x00000004;
enum AV_CH_LOW_FREQUENCY          = 0x00000008;
enum AV_CH_BACK_LEFT              = 0x00000010;
enum AV_CH_BACK_RIGHT             = 0x00000020;
enum AV_CH_FRONT_LEFT_OF_CENTER   = 0x00000040;
enum AV_CH_FRONT_RIGHT_OF_CENTER  = 0x00000080;
enum AV_CH_BACK_CENTER            = 0x00000100;
enum AV_CH_SIDE_LEFT              = 0x00000200;
enum AV_CH_SIDE_RIGHT             = 0x00000400;
enum AV_CH_TOP_CENTER             = 0x00000800;
enum AV_CH_TOP_FRONT_LEFT         = 0x00001000;
enum AV_CH_TOP_FRONT_CENTER       = 0x00002000;
enum AV_CH_TOP_FRONT_RIGHT        = 0x00004000;
enum AV_CH_TOP_BACK_LEFT          = 0x00008000;
enum AV_CH_TOP_BACK_CENTER        = 0x00010000;
enum AV_CH_TOP_BACK_RIGHT         = 0x00020000;
enum AV_CH_STEREO_LEFT            = 0x20000000;
enum AV_CH_STEREO_RIGHT           = 0x40000000;
enum AV_CH_WIDE_LEFT              = 0x0000000080000000UL;
enum AV_CH_WIDE_RIGHT             = 0x0000000100000000UL;
enum AV_CH_SURROUND_DIRECT_LEFT   = 0x0000000200000000UL;
enum AV_CH_SURROUND_DIRECT_RIGHT  = 0x0000000400000000UL;
enum AV_CH_LOW_FREQUENCY_2        = 0x0000000800000000UL;

enum AV_CH_LAYOUT_NATIVE          = 0x8000000000000000UL;

enum AV_CH_LAYOUT_MONO              = (AV_CH_FRONT_CENTER);
enum AV_CH_LAYOUT_STEREO            = (AV_CH_FRONT_LEFT|AV_CH_FRONT_RIGHT);
enum AV_CH_LAYOUT_2POINT1           = (AV_CH_LAYOUT_STEREO|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_2_1               = (AV_CH_LAYOUT_STEREO|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_SURROUND          = (AV_CH_LAYOUT_STEREO|AV_CH_FRONT_CENTER);
enum AV_CH_LAYOUT_3POINT1           = (AV_CH_LAYOUT_SURROUND|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_4POINT0           = (AV_CH_LAYOUT_SURROUND|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_4POINT1           = (AV_CH_LAYOUT_4POINT0|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_2_2               = (AV_CH_LAYOUT_STEREO|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT);
enum AV_CH_LAYOUT_QUAD              = (AV_CH_LAYOUT_STEREO|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT);
enum AV_CH_LAYOUT_5POINT0           = (AV_CH_LAYOUT_SURROUND|AV_CH_SIDE_LEFT|AV_CH_SIDE_RIGHT);
enum AV_CH_LAYOUT_5POINT1           = (AV_CH_LAYOUT_5POINT0|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_5POINT0_BACK      = (AV_CH_LAYOUT_SURROUND|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT);
enum AV_CH_LAYOUT_5POINT1_BACK      = (AV_CH_LAYOUT_5POINT0_BACK|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_6POINT0           = (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_6POINT0_FRONT     = (AV_CH_LAYOUT_2_2|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER);
enum AV_CH_LAYOUT_HEXAGONAL         = (AV_CH_LAYOUT_5POINT0_BACK|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_6POINT1           = (AV_CH_LAYOUT_5POINT1|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_6POINT1_BACK      = (AV_CH_LAYOUT_5POINT1_BACK|AV_CH_BACK_CENTER);
enum AV_CH_LAYOUT_6POINT1_FRONT     = (AV_CH_LAYOUT_6POINT0_FRONT|AV_CH_LOW_FREQUENCY);
enum AV_CH_LAYOUT_7POINT0           = (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT);
enum AV_CH_LAYOUT_7POINT0_FRONT     = (AV_CH_LAYOUT_5POINT0|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER);
enum AV_CH_LAYOUT_7POINT1           = (AV_CH_LAYOUT_5POINT1|AV_CH_BACK_LEFT|AV_CH_BACK_RIGHT);
enum AV_CH_LAYOUT_7POINT1_WIDE      = (AV_CH_LAYOUT_5POINT1|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER);
enum AV_CH_LAYOUT_7POINT1_WIDE_BACK = (AV_CH_LAYOUT_5POINT1_BACK|AV_CH_FRONT_LEFT_OF_CENTER|AV_CH_FRONT_RIGHT_OF_CENTER);
enum AV_CH_LAYOUT_OCTAGONAL         = (AV_CH_LAYOUT_5POINT0|AV_CH_BACK_LEFT|AV_CH_BACK_CENTER|AV_CH_BACK_RIGHT);
enum AV_CH_LAYOUT_STEREO_DOWNMIX    = (AV_CH_STEREO_LEFT|AV_CH_STEREO_RIGHT);

enum AVMatrixEncoding {
    AV_MATRIX_ENCODING_NONE,
    AV_MATRIX_ENCODING_DOLBY,
    AV_MATRIX_ENCODING_DPLII,
    AV_MATRIX_ENCODING_DPLIIX,
    AV_MATRIX_ENCODING_DPLIIZ,
    AV_MATRIX_ENCODING_DOLBYEX,
    AV_MATRIX_ENCODING_DOLBYHEADPHONE,
    AV_MATRIX_ENCODING_NB
};

ulong av_get_channel_layout(const char *name);

void av_get_channel_layout_string(char *buf, int buf_size, int nb_channels, ulong channel_layout);

int av_get_channel_layout_nb_channels(ulong channel_layout);

ulong av_get_default_channel_layout(int nb_channels);

int av_get_channel_layout_channel_index(ulong channel_layout,
                                        ulong channel);

ulong av_channel_layout_extract_channel(ulong channel_layout, int index);

const char *av_get_channel_name(ulong channel);
